=============================================================================
List of generated methods in project: ServoMotor

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "SERVO1"    (component Servo)
   - SERVO1_SetPWMDutyUs -Sets the servo PWM duty cycle in micro seconds (us)
   - SERVO1_SetPos -Sets the servo position
   - SERVO1_PWMusToPos8 -Transforms a micro-second PWM time into 8bit position
   - SERVO1_Init -Moves the serve to its initialization position.

Module "SERVO1_TimerUnit" (component TimerUnit_LDD)
   - SERVO1_TimerUnit_Init -Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors 
                and sets interrupt priority, sets pin routing, sets timing, etc. If the property <"Enable in init. code"> is 
                set to "yes" value then the device is also enabled (see the description of the <Enable> method). In this case 
                the <Enable> method is not necessary and needn't to be generated. This method can be called only once. Before 
                the second call of Init the <Deinit> must be called first.
   - SERVO1_TimerUnit_Enable -Enables the component - it starts the signal generation. Events may be generated (see 
                SetEventMask). The method is not available if the counter can't be disabled/enabled by HW.
   - SERVO1_TimerUnit_Disable -Disables the component - it stops signal generation and events calling. The method is not 
                available if the counter can't be disabled/enabled by HW.
   - SERVO1_TimerUnit_GetPeriodTicks -Returns the number of counter ticks before re-initialization. See also method 
                <SetPeriodTicks>. This method is available only if the property <"Counter restart"> is switched to 'on-match' 
                value.
   - SERVO1_TimerUnit_ResetCounter -Resets counter. If counter is counting up then it is set to zero. If counter is counting 
                down then counter is updated to the reload value.   The method is not available if HW doesn't allow resetting 
                of the counter.
   - SERVO1_TimerUnit_GetCounterValue -Returns the content of counter register. This method can be used both if counter is 
                enabled and if counter is disabled. The method is not available if HW doesn't allow reading of the counter.
   - SERVO1_TimerUnit_SetOffsetTicks -Sets the new offset value to channel specified by the parameter ChannelIdx. It is user 
                responsibility to use value below selected period. This method is available when at least one channel is 
                configured.
   - SERVO1_TimerUnit_GetOffsetTicks -Returns the number of counter ticks to compare match channel specified by the parameter 
                ChannelIdx. See also method <SetOffsetTicks>. This method is available when at least one channel is configured.
   - SERVO1_TimerUnit_SelectOutputAction -Sets the type of compare match and counter overflow action on channel output. This 
                method is available when at least one channel is configured.

Module "WAIT1"     (component Wait)
   - WAIT1_Wait10Cycles -Wait for 10 CPU cycles.
   - WAIT1_Wait100Cycles -Wait for 100 CPU cycles.
   - WAIT1_WaitCycles -Wait for a specified number of CPU cycles (16bit data type).
   - WAIT1_WaitLongCycles -Wait for a specified number of CPU cycles (32bit data type).
   - WAIT1_Waitms -Wait for a specified time in milliseconds.
   - WAIT1_Waitus -Wait for a specified time in microseconds.
   - WAIT1_WaitOSms -If an RTOS is enabled, this routine will use a non-blocking wait method. Otherwise it will do a 
                busy/blocking wait.

Module "KSDK1"     (component KinetisSDK)

Module "Cpu"       (component MKL46Z256LL4)
   - Cpu_SetClockConfiguration -Calling of this method will cause the clock configuration change and reconfiguration of all 
                components according to the requested clock configuration setting.
   - Cpu_GetClockConfiguration -Returns the active clock configuration identifier. The method is automatically enabled if more 
                than one clock configuration is enabled in the component.

===================================================================================
